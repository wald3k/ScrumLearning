# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-05-19 19:53
from __future__ import unicode_literals

import Course.models
import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=256, verbose_name="Answer's text")),
                ('is_valid', models.BooleanField(default=False)),
                ('is_checked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('deadline', models.DateTimeField(blank=True, default=datetime.datetime(2018, 6, 18, 21, 53, 5, 67879))),
                ('_progress', models.IntegerField(choices=[(0, 'OVERVIEW'), (1, 'LEARNING_MATERIALS'), (2, 'QUIZ'), (3, 'ROLES_IN_PROJECT'), (4, 'CURRENT_PROGRESS'), (5, 'PRODUCT_BACKLOG'), (6, 'GENERAL_DISCUSSION'), (7, 'SCRUM_POKER'), (8, 'SPRINT_1_BACKLOG'), (9, 'SPRINT_1_BOARD'), (10, 'SPRINT_1_DASHBOARD'), (11, 'SPRINT_1_DISCUSSION'), (12, 'SPRINT_1_RETROSPECTION'), (13, 'SPRINT_2_BACKLOG'), (14, 'SPRINT_2_BOARD'), (15, 'SPRINT_2_DASHBOARD'), (16, 'SPRINT_2_DISCUSSION'), (17, 'SPRINT_2_RETROSPECTION'), (18, 'FINAL_RESULTS')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Estimation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField(default=999)),
            ],
        ),
        migrations.CreateModel(
            name='LearningMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, max_length=20000, upload_to='static/pdf')),
                ('desc', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Poker_game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('slug_name', models.SlugField(max_length=64, unique=True)),
                ('description', models.TextField(blank=True)),
                ('cover', models.ImageField(default='static/defaults/default_course_cover/cover.png', upload_to=Course.models.cover_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=256, verbose_name="Question's text")),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Exam name')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizes',
            },
        ),
        migrations.CreateModel(
            name='QuizResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.IntegerField(default=0)),
                ('passed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Shout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_stage', models.IntegerField(choices=[(0, 'OVERVIEW'), (1, 'LEARNING_MATERIALS'), (2, 'QUIZ'), (3, 'ROLES_IN_PROJECT'), (4, 'CURRENT_PROGRESS'), (5, 'PRODUCT_BACKLOG'), (6, 'GENERAL_DISCUSSION'), (7, 'SCRUM_POKER'), (8, 'SPRINT_1_BACKLOG'), (9, 'SPRINT_1_BOARD'), (10, 'SPRINT_1_DASHBOARD'), (11, 'SPRINT_1_DISCUSSION'), (12, 'SPRINT_1_RETROSPECTION'), (13, 'SPRINT_2_BACKLOG'), (14, 'SPRINT_2_BOARD'), (15, 'SPRINT_2_DASHBOARD'), (16, 'SPRINT_2_DISCUSSION'), (17, 'SPRINT_2_RETROSPECTION'), (18, 'FINAL_RESULTS')], default=4)),
                ('text', models.TextField()),
                ('date_created', models.DateTimeField(editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backlog', models.IntegerField(choices=[(0, 'NOT_SELECTED'), (1, 'PRODUCT_BACKLOG')], default=0)),
                ('sprint', models.IntegerField(choices=[(0, 'NOT_SELECTED'), (1, 'SPRINT_1'), (2, 'SPRINT_2')], default=0)),
                ('sprint_state', models.IntegerField(choices=[(0, 'NOT_SELECTED'), (1, 'NOT_STARTED'), (2, 'IN_PROGRESS'), (3, 'COMPLETED')], default=0)),
                ('name', models.CharField(max_length=64)),
                ('content', models.TextField()),
                ('solution', models.TextField()),
                ('solution_test', models.TextField()),
                ('perfect_solution', models.TextField(null=True)),
                ('time', models.IntegerField(default=1000)),
                ('is_poker_finished', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Story',
                'verbose_name_plural': 'Stories',
            },
        ),
    ]
